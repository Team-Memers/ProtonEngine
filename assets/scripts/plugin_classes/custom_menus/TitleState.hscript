var blackScreen;
var credGroup;
var credTextShit;
var textGroup;
var ngSpr;
var shownWacky = -1;
var curWacky = [];
var wackyEndBeat = 0;
var wackyImage;
var coolDudes = [];
var X = 88;
	
var name_1 = [[]];
var name_2 = [[]];
var name_3 = [[]];
var curName = [[]];
var curX = [[]];
var curY = [[]];
var curFPS = [[]];
var isPixel = [[]];
var shouldScale = [[]];
var curScale = [[]];
var animationType = [[]];
//var Menu = [[]];

var gfTitle = CoolUtil.parseJson(FNFAssets.getJson("assets/data/gfTitle"));
var logoTitle = CoolUtil.parseJson(FNFAssets.getJson("assets/data/logoTitle"));
var bgTitle = CoolUtil.parseJson(FNFAssets.getJson("assets/data/bgTitle"));

var customMenuConfirm = [[]];
var customMenuScroll = [[]];
var skippedIntro = false;

function create() 
{
    curWacky = getRandomObject(getIntroTextShit());
    //curWacky = ["CUIDADO", "GUAYANDO"];
    
    new FlxTimer().start(1, function(tmr)
    {
        startIntro();
    });
}

var logoBl;
var gfDance;
var danceLeft = false;
var titleText;
var titleBg;
function startIntro()
{
    if (!TitleState.initialized)
    {
        makeTransition();

        FlxG.sound.playMusic(FNFAssets.getSound('assets/music/custom_menu_music/'
            + CoolUtil.parseJson(FNFAssets.getText("assets/music/custom_menu_music/custom_menu_music.json")).Menu+'/title' + TitleState.soundExt), 0);

        //FlxG.sound.play('assets/music/custom_menu_music/'
        //+ CoolUtil.parseJson(FNFAssets.getText("assets/music/custom_menu_music/custom_menu_music.json")).Menu+'/title' + TitleState.soundExt, 0);
        
        FlxG.sound.music.fadeIn(4, 0, 0.7);
    }

    Conductor.changeBPM(102);
    togglePersistUpdate(true);

    titleBg = new FlxSprite();
    titleBg.frames = FlxAtlasFrames.fromSparrow('assets/images/titleBG.png', 'assets/images/titleBG.xml');
    titleBg.antialiasing = !bgTitle.isPixel;
    titleBg.animation.addByPrefix('thefunny', bgTitle.curName, bgTitle.curFPS, true);
    titleBg.animation.play('thefunny');

    if (OptionsHandler.options.titleToggle){
        add(titleBg);
    }

    logoBl = new FlxSprite(logoTitle.curX, logoTitle.curY);
    logoBl.frames = FlxAtlasFrames.fromSparrow('assets/images/logoBumpin.png', 'assets/images/logoBumpin.xml');
    logoBl.antialiasing = !logoTitle.isPixel;
    logoBl.animation.addByPrefix('bump', logoTitle.curName, logoTitle.curFPS);
    logoBl.animation.play('bump');
    logoBl.updateHitbox();
    if (logoTitle.shouldScale){
        logoBl.setGraphicSize(Std.int(logoBl.width * logoTitle.curScale));
    }

    gfDance = new FlxSprite(gfTitle.curX, gfTitle.curY);
    gfDance.frames = FlxAtlasFrames.fromSparrow('assets/images/gfDanceTitle.png', 'assets/images/gfDanceTitle.xml');
    if (gfTitle.animationType == "gfIdle"){
        gfDance.animation.addByIndices('danceLeft', gfTitle.curName, [30, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14], "", gfTitle.curFPS, false);
        gfDance.animation.addByIndices('danceRight', gfTitle.curName, [15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "", gfTitle.curFPS, false);
    }
    if (gfTitle.animationType == "bfIdle"){
        gfDance.animation.addByPrefix('dance', gfTitle.curName, gfTitle.curFPS, false);
    }
    if (gfTitle.animationType == "loopIdle"){
        gfDance.animation.addByPrefix('loopyFunny', gfTitle.curName, gfTitle.curFPS, true);
    }
    gfDance.antialiasing = !gfTitle.isPixel;
    if (gfTitle.shouldScale == true){
        gfDance.setGraphicSize(Std.int(gfDance.width * gfTitle.curScale));
    }
    add(gfDance);
    add(logoBl);

    titleText = new FlxSprite(100, FlxG.height * 0.8);
    titleText.frames = FlxAtlasFrames.fromSparrow('assets/images/titleEnter.png', 'assets/images/titleEnter.xml');
    titleText.animation.addByPrefix('idle', "Press Enter to Begin", 24);
    titleText.animation.addByPrefix('press', "ENTER PRESSED", 24);
    titleText.antialiasing = true;
    titleText.animation.play('idle');
    titleText.updateHitbox();
    add(titleText);

    var logo = new FlxSprite().loadGraphic('assets/images/logo.png');
    logo.screenCenter();
    logo.antialiasing = true;

    credGroup = new FlxGroup();
    add(credGroup);
    textGroup = new FlxGroup();

    blackScreen = new FlxSprite().makeGraphic(FlxG.width, FlxG.height, 0xFF000000);
    credGroup.add(blackScreen);
    // THIS SHIT DOESN'T WORK ON NEKO!
    // IDK WHY I AM TESTING IT ON NEKO!
    coolDudes = FNFAssets.getText('assets/data/creators.txt').split("\n");
    trace(coolDudes);
    credTextShit = new Alphabet(0, 0, "akofhafsk", true);
    credTextShit.screenCenter();
    credTextShit.visible = false;

    ngSpr = new FlxSprite(0, FlxG.height * 0.52).loadGraphic('assets/images/newgrounds_logo.png');
    add(ngSpr);
    ngSpr.visible = false;
    ngSpr.setGraphicSize(Std.int(ngSpr.width * 0.8));
    ngSpr.updateHitbox();
    ngSpr.screenCenter();
    ngSpr.y += 150;
    ngSpr.antialiasing = true;

    FlxTween.tween(credTextShit, {y: credTextShit.y + 20}, 2.9, {ease: FlxEase.quadInOut});

    if (TitleState.initialized)
        skipIntro();
    else
        TitleState.initialized = true;
}

function getIntroTextShit()
{
    var fullText = FNFAssets.getText('assets/data/introText.txt');

    var firstArray = fullText.split('\n');
    var swagGoodArray = [[]];

    for (i in firstArray)
    {
        swagGoodArray.push(i.split('--'));
    }

    return swagGoodArray;
}

var transitioning = false;

function update(elapsed)
{
    if (FlxG.sound.music != null)
        Conductor.songPosition = FlxG.sound.music.time;

    if (FlxG.keys.justPressed.F)
    {
        FlxG.fullscreen = !FlxG.fullscreen;
    }

    var pressedEnter = FlxG.keys.justPressed.ENTER;

    if (pressedEnter && !transitioning && skippedIntro)
    {

        titleText.animation.play('press');
        titleBg.animation.addByPrefix('selected', bgTitle.curName + " selected", bgTitle.curFPS, false);
        titleBg.animation.play('selected');

        FlxG.camera.flash(0xFFffffff, 1);
        FlxG.sound.play('assets/sounds/custom_menu_sounds/'
            + CoolUtil.parseJson(FNFAssets.getText("assets/sounds/custom_menu_sounds/custom_menu_sounds.json")).customMenuConfirm+'/confirmMenu' + TitleState.soundExt, 0.7);

        transitioning = true;

        new FlxTimer().start(2, function(tmr)
        {
            // Check if version is outdated
            LoadingState.loadAndSwitchState(new MainMenuState());
        });
    }

    if (pressedEnter && !skippedIntro)
    {
        skipIntro();
    }
}

function createCoolText(textArray)
{
    for (i in 0...textArray.length)
    {
        var money = new Alphabet(0, 0, textArray[i], true, false);
        money.screenCenter(88);
        money.y += (i * 60) + 200;
        money.y -= 350;
        credGroup.add(money);
        textGroup.add(money);
    }
}

function addMoreText(text)
{
    var coolText = new Alphabet(0, 0, text, true, false);
    coolText.screenCenter(88);
    coolText.y += (textGroup.length * 60) + 200;
    coolText.y -= 350;
    credGroup.add(coolText);
    textGroup.add(coolText);
}

function deleteCoolText()
{
    while (textGroup.members.length > 0)
    {
        credGroup.remove(textGroup.members[0], true);
        textGroup.remove(textGroup.members[0], true);
    }
}

function beatHit(beat)
{
    logoBl.animation.play('bump');
    danceLeft = !danceLeft;

    if (gfTitle.animationType == "gfIdle"){
        if (danceLeft){
            gfDance.animation.play('danceRight');
        }
        else{
            gfDance.animation.play('danceLeft');
        }
    }
    if (gfTitle.animationType == "bfIdle"){
        gfDance.animation.play('dance');
    }
    if (gfTitle.animationType == "loopIdle"){
        gfDance.animation.play('loopyFunny');
    }

    if (curBeat < 9) {
        switch (curBeat)
        {
            case 1:
                createCoolText(coolDudes);
            case 3:
                addMoreText('present');
            case 4:
                deleteCoolText();
            case 5:
                createCoolText(['Not in association', 'with']);
            case 7:
                addMoreText('these guys');
                ngSpr.visible = true;
            case 8:
                deleteCoolText();
                ngSpr.visible = false;
            case 9:
                createCoolText([curWacky[0]]);
            case 11:
                addMoreText(curWacky[1]);
            case 12:
                deleteCoolText();
            case 13:
                addMoreText('Friday');
            case 14:
                addMoreText('Night');
            case 15:
                addMoreText('Funkin');
            case 16:
                skipIntro();
        }
    } else {
        if (curBeat == 9) {
            createCoolText([curWacky[0]]);
            shownWacky = 0;
            wackyEndBeat = curBeat;
        } else if (curBeat % 2 == 1 && shownWacky + 1 < curWacky.length) {
            shownWacky += 1;
            addMoreText(curWacky[shownWacky]);
            wackyEndBeat = curBeat;
        } else if (shownWacky == curWacky.length - 1){
            trace(wackyEndBeat + " " + curBeat);
            switch (curBeat - wackyEndBeat) {
                case 1:
                    deleteCoolText();
                case 2:
                    addMoreText(CoolUtil.parseJson(FNFAssets.getText("assets/data/gameInfo.json")).name_1);
                case 3:
                    addMoreText(CoolUtil.parseJson(FNFAssets.getText("assets/data/gameInfo.json")).name_2);
                case 4:
                    addMoreText(CoolUtil.parseJson(FNFAssets.getText("assets/data/gameInfo.json")).name_3);
                case 5:
                    skipIntro();
            }
        }
    }
}

function skipIntro()
{
    if (!skippedIntro)
    {
        remove(ngSpr);

        FlxG.camera.flash(0xFFffffff, 1);
        remove(credGroup);
        skippedIntro = true;
    }
}