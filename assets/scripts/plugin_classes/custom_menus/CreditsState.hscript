var iconArray = [];

var curSelected = 0;
var grpSongs;

var bg;
var descText;
var intendedColor;
var colorTween;
var descBox;

var offsetThing = -75;


function create()
{

    // LOAD MUSIC
    /*
    var musicUse = 'assets/music/custom_menu_music/' + CoolUtil.parseJson(FNFAssets.getText("assets/music/custom_menu_music/custom_menu_music.json")).Menu+'/freakyMenu' + TitleState.soundExt;
    if (Main.curMusicName != musicUse)
    {
        FlxG.sound.playMusic(FNFAssets.getSound(musicUse));
        Main.curMusicName = musicUse;
    }
    */

    // LOAD CHARACTERS
    bg = new FlxSprite().loadGraphic(FNFAssets.getBitmapData('assets/images/menuDesat.png'));
    add(bg);

    grpSongs = new FlxGroup();
    add(grpSongs);

    for (i in 0...songs.length)
    {
        var isSelectable = !unselectableCheck(i);
        
        var songText = new Alphabet(0, (70 * i) + 30, getCreditData(i, 0), true, false);
        songText.isMenuItem = true;
        songText.targetY = i;
        grpSongs.add(songText);

        if(isSelectable) 
        {
            var icon = new AttachedSprite('assets/images/credits/' + getCreditData(i, 1));
            icon.xAdd = songText.width + 30;
            icon.sprTracker = songText;
            icon.centerOffsets();
            icon.yAdd -= icon.height/4;
    
            // using a FlxGroup is too much fuss!
            if (FNFAssets.exists('assets/images/credits/' + getCreditData(i, 1) + '.png'))
            {
                iconArray.push(icon);
                add(icon);
            }

            if(curSelected == -1) curSelected = i;
        }
        
    }

    descBox = new AttachedSprite();
    descBox.makeGraphic(1, 1, 0xFF000000);
    descBox.xAdd = -10;
    descBox.yAdd = -10;
    descBox.alphaMult = 0.6;
    descBox.alpha = 0.6;
    add(descBox);

    descText = new FlxText(50, FlxG.height + offsetThing - 25, 1180, "", 32);
    descText.setFormat(Paths.font("vcr.ttf"), 32, 0xFFffffff, "center");
    descText.scrollFactor.set();
    descBox.sprTracker = descText;
    add(descText);

    bg.color = getCurrentBGColor();
    intendedColor = bg.color;

    changeSelection(1);

}

function update(elapsed)
{
    var upP = controls.UP_MENU;
    var downP = controls.DOWN_MENU;
    var accepted = controls.ACCEPT;
    if (upP)
    {
        changeSelection(-1);
    }
    if (downP)
    {
        changeSelection(1);
    }
    
    if(controls.ACCEPT) {
        CoolUtil.browserLoad(getCreditData(curSelected, 3));
    }

    if (controls.BACK)
    {
        // main menu or else we are cursed
        //LoadingState.loadAndSwitchState(new SaveDataState());
        LoadingState.loadAndSwitchState(new MainMenuState());
    }

}
var moveTween = null;
function changeSelection(change)
{

    FlxG.sound.play('assets/sounds/scrollMenu' + TitleState.soundExt, 0.4);

    do {

        curSelected += change;

        if (curSelected < 0)
            curSelected = songs.length - 1;
        if (curSelected >= songs.length)
            curSelected = 0;

    } while(unselectableCheck(curSelected));

    // selector.y = (70 * curSelected) + 30;

    var newColor = getCurrentBGColor();
    if(newColor != intendedColor) {
        if(colorTween != null) {
            colorTween.cancel();
        }
        intendedColor = newColor;
        colorTween = FlxTween.color(bg, 1, bg.color, intendedColor, {
            onComplete: function(twn) {
                colorTween = null;
            }
        });
    }

    var bullShit = 0;

    for (item in grpSongs.members)
    {
        item.targetY = bullShit - curSelected;
        bullShit++;

        if(!unselectableCheck(bullShit-1)) 
        {
            item.alpha = 0.6;
            // item.setGraphicSize(Std.int(item.width * 0.8));

            if (item.targetY == 0)
            {
                item.alpha = 1;
                // item.setGraphicSize(Std.int(item.width));
            }
        }
    }

    descText.text = getCreditData(curSelected, 2);
    descText.y = FlxG.height - descText.height + offsetThing - 60;

    if(moveTween != null) moveTween.cancel();
    moveTween = FlxTween.tween(descText, {y : descText.y + 75}, 0.25, {ease: FlxEase.sineOut});

    descBox.setGraphicSize(Std.int(descText.width + 20), Std.int(descText.height + 25));
    descBox.updateHitbox();
}

function getCurrentBGColor() 
{
    return (colorFromString(getCreditData(curSelected, 4)));
}

function unselectableCheck(num) {
    if (songs[num].length <= 1)
        return true;
    else
        return false;
}